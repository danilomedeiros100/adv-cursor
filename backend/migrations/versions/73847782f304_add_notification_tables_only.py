"""Add notification tables only

Revision ID: 73847782f304
Revises: 6ac39b7688e9
Create Date: 2025-08-19 09:40:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '73847782f304'
down_revision: Union[str, Sequence[str], None] = '6ac39b7688e9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('process_notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('process_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('should_email', sa.Boolean(), nullable=True),
    sa.Column('should_push', sa.Boolean(), nullable=True),
    sa.Column('should_sms', sa.Boolean(), nullable=True),
    sa.Column('notification_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['processes.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Atualizar tabela notification_preferences existente
    op.add_column('notification_preferences', sa.Column('deadline_notifications', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('court_updates', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('hearing_reminders', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('judgment_notifications', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('urgent_processes', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('email_enabled', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('push_enabled', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('sms_enabled', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('deadline_reminder_days', sa.Integer(), nullable=True))
    op.add_column('notification_preferences', sa.Column('daily_summary', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('weekly_summary', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('notification_preferences', 'weekly_summary')
    op.drop_column('notification_preferences', 'daily_summary')
    op.drop_column('notification_preferences', 'deadline_reminder_days')
    op.drop_column('notification_preferences', 'sms_enabled')
    op.drop_column('notification_preferences', 'push_enabled')
    op.drop_column('notification_preferences', 'email_enabled')
    op.drop_column('notification_preferences', 'urgent_processes')
    op.drop_column('notification_preferences', 'judgment_notifications')
    op.drop_column('notification_preferences', 'hearing_reminders')
    op.drop_column('notification_preferences', 'court_updates')
    op.drop_column('notification_preferences', 'deadline_notifications')
    op.drop_table('process_notifications')
    # ### end Alembic commands ###
