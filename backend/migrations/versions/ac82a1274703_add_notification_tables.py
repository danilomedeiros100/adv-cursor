"""Add notification tables

Revision ID: ac82a1274703
Revises: 6ac39b7688e9
Create Date: 2025-08-19 09:34:00.735866

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ac82a1274703'
down_revision: Union[str, Sequence[str], None] = '6ac39b7688e9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('process_notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('process_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('should_email', sa.Boolean(), nullable=True),
    sa.Column('should_push', sa.Boolean(), nullable=True),
    sa.Column('should_sms', sa.Boolean(), nullable=True),
    sa.Column('notification_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['processes.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('process_specialties',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('process_id', sa.UUID(), nullable=False),
    sa.Column('specialty_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['processes.id'], ),
    sa.ForeignKeyConstraint(['specialty_id'], ['specialties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('notifications')
    op.add_column('notification_preferences', sa.Column('deadline_notifications', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('court_updates', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('hearing_reminders', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('judgment_notifications', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('urgent_processes', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('email_enabled', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('push_enabled', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('sms_enabled', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('deadline_reminder_days', sa.Integer(), nullable=True))
    op.add_column('notification_preferences', sa.Column('daily_summary', sa.Boolean(), nullable=True))
    op.add_column('notification_preferences', sa.Column('weekly_summary', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'notification_preferences', 'tenants', ['tenant_id'], ['id'])
    op.drop_column('notification_preferences', 'whatsapp_notifications')
    op.drop_column('notification_preferences', 'notification_types')
    op.drop_column('notification_preferences', 'email_notifications')
    op.drop_column('notification_preferences', 'quiet_hours_end')
    op.drop_column('notification_preferences', 'push_notifications')
    op.drop_column('notification_preferences', 'sms_notifications')
    op.drop_column('notification_preferences', 'preferred_channels')
    op.drop_column('notification_preferences', 'quiet_hours_start')
    op.drop_constraint(op.f('unique_process_lawyer'), 'process_lawyers', type_='unique')
    op.drop_constraint(op.f('processes_cnj_number_key'), 'processes', type_='unique')
    op.drop_constraint(op.f('processes_specialty_id_fkey'), 'processes', type_='foreignkey')
    op.create_foreign_key(None, 'processes', 'specialties', ['specialty_id'], ['id'])
    op.alter_column('tenant_users', 'role',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.create_foreign_key(None, 'tenant_users', 'tenants', ['tenant_id'], ['id'])
    op.create_foreign_key(None, 'tenant_users', 'users', ['user_id'], ['id'])
    op.drop_column('tenant_users', 'invited_by')
    op.create_foreign_key(None, 'user_specialties', 'specialties', ['specialty_id'], ['id'])
    op.create_foreign_key(None, 'user_specialties', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_specialties', type_='foreignkey')
    op.drop_constraint(None, 'user_specialties', type_='foreignkey')
    op.add_column('tenant_users', sa.Column('invited_by', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tenant_users', type_='foreignkey')
    op.drop_constraint(None, 'tenant_users', type_='foreignkey')
    op.alter_column('tenant_users', 'role',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_constraint(None, 'processes', type_='foreignkey')
    op.create_foreign_key(op.f('processes_specialty_id_fkey'), 'processes', 'legal_specialties', ['specialty_id'], ['id'])
    op.create_unique_constraint(op.f('processes_cnj_number_key'), 'processes', ['cnj_number'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('unique_process_lawyer'), 'process_lawyers', ['process_id', 'lawyer_id'], postgresql_nulls_not_distinct=False)
    op.add_column('notification_preferences', sa.Column('quiet_hours_start', sa.VARCHAR(length=5), autoincrement=False, nullable=True))
    op.add_column('notification_preferences', sa.Column('preferred_channels', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('notification_preferences', sa.Column('sms_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('notification_preferences', sa.Column('push_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('notification_preferences', sa.Column('quiet_hours_end', sa.VARCHAR(length=5), autoincrement=False, nullable=True))
    op.add_column('notification_preferences', sa.Column('email_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('notification_preferences', sa.Column('notification_types', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('notification_preferences', sa.Column('whatsapp_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'notification_preferences', type_='foreignkey')
    op.drop_column('notification_preferences', 'weekly_summary')
    op.drop_column('notification_preferences', 'daily_summary')
    op.drop_column('notification_preferences', 'deadline_reminder_days')
    op.drop_column('notification_preferences', 'sms_enabled')
    op.drop_column('notification_preferences', 'push_enabled')
    op.drop_column('notification_preferences', 'email_enabled')
    op.drop_column('notification_preferences', 'urgent_processes')
    op.drop_column('notification_preferences', 'judgment_notifications')
    op.drop_column('notification_preferences', 'hearing_reminders')
    op.drop_column('notification_preferences', 'court_updates')
    op.drop_column('notification_preferences', 'deadline_notifications')
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('notification_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('process_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('document_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('channels', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('read_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_sent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('sent_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name=op.f('notifications_client_id_fkey')),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name=op.f('notifications_document_id_fkey')),
    sa.ForeignKeyConstraint(['process_id'], ['processes.id'], name=op.f('notifications_process_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('notifications_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey'))
    )
    op.drop_table('process_specialties')
    op.drop_table('process_notifications')
    # ### end Alembic commands ###
